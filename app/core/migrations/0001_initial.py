# Generated by Django 4.1.10 on 2023-08-02 00:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('note', models.TextField(blank=True)),
                ('balance', models.FloatField(default=0.0)),
                ('allow_credit', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('percent', models.FloatField(default=0.0)),
                ('expire', models.DateTimeField(blank=True, null=True)),
                ('permanent_discount', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50)),
                ('message_id', models.CharField(max_length=255)),
                ('file_names', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kiosk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Kiosk', max_length=50)),
                ('key', models.UUIDField(default=uuid.uuid4)),
                ('configured_printers', models.TextField()),
                ('status', models.CharField(choices=[('error', 'error'), ('active', 'active'), ('disabled', 'disabled')], default='disabled', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('identificator', models.CharField(blank=True, default='', max_length=50)),
                ('amount', models.FloatField(default=0.0)),
                ('type', models.CharField(choices=[('replenishment', 'replenishment'), ('withdrawal', 'withdrawal'), ('guest print', 'guest print')], default='guest print', max_length=15)),
                ('confirming_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirming_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Print',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('print_settings', models.TextField()),
                ('identificator', models.CharField(blank=True, default='', max_length=50)),
                ('status', models.CharField(choices=[('await', 'await'), ('printed', 'printed'), ('canceled', 'canceled')], default='await', max_length=10)),
                ('kiosk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.kiosk')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('print_settings', models.TextField()),
                ('start_page', models.IntegerField(default=1)),
                ('end_page', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('base_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='same_price', to='core.price')),
                ('kiosk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.kiosk')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='discount',
            field=models.ManyToManyField(blank=True, to='core.discount'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
